[mypy]
; モジュールが見つからない場合（型定義ファイルが存在しない場合）でもエラーにせず、代わりにそのインポートをAnyとして扱う。
; default: False
ignore_missing_imports = True

; 型注釈がないメソッド定義もチェックする。
; default: False
check_untyped_defs = True

; 到達不能なコードがある場合に警告を出すようになる。
; default: False
warn_unreachable = True

; 設定ファイル内の記述で使用されていないオプションがある場合、警告を表示する。
; default: False
warn_unused_configs = True

; 不要な # type: ignore コメントが残っている場合に警告する
; default: False
warn_unused_ignores = True

; 有効化すると、関数の戻り値がAnyとなる場合に警告を出すようになる。
; default: False
warn_return_any = True

; 有効化すると、関数定義に型注釈がない場合にエラーとする。全ての関数に明示的な型注釈を付けることが求められる。
; default: False
disallow_untyped_defs = True

; 有効化すると、明示的にOptional型として指定しない限り引数にNoneを許容しないようになる。
; default: False
no_implicit_optional = True

; 有効化すると、型注釈がない関数呼び出しをエラーとする。
; default: False
disallow_untyped_calls = True

; 有効化すると、型注釈がないデコレータをエラーとする。
; default: False
disallow_untyped_decorators = True
